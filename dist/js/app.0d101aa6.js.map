{"version":3,"file":"js/app.0d101aa6.js","mappings":"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","sources":["webpack://train_mapgenerator2/./src/App.vue","webpack://train_mapgenerator2/./src/components/europe.vue","webpack://train_mapgenerator2/src/components/europe.vue","webpack://train_mapgenerator2/./src/components/europe.vue?5aa9","webpack://train_mapgenerator2/./src/components/europe.vue?2c9f","webpack://train_mapgenerator2/src/App.vue","webpack://train_mapgenerator2/./src/App.vue?51dd","webpack://train_mapgenerator2/./src/App.vue?0e40","webpack://train_mapgenerator2/./src/main.js","webpack://train_mapgenerator2/webpack/bootstrap","webpack://train_mapgenerator2/webpack/runtime/chunk loaded","webpack://train_mapgenerator2/webpack/runtime/compat get default export","webpack://train_mapgenerator2/webpack/runtime/define property getters","webpack://train_mapgenerator2/webpack/runtime/global","webpack://train_mapgenerator2/webpack/runtime/hasOwnProperty shorthand","webpack://train_mapgenerator2/webpack/runtime/publicPath","webpack://train_mapgenerator2/webpack/runtime/jsonp chunk loading","webpack://train_mapgenerator2/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"banner\"}}),_c('EuropeMap')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"container\"}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"container\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three';\r\nimport { MapControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { TTFLoader } from \"three/examples/jsm/loaders/TTFLoader\";\r\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\nimport * as GEOLIB from \"geolib\";\r\n\r\nimport DBSANS from './../../public/DB Sans Bold/DB Sans Bold.ttf';\r\n\r\nexport default {\r\n\r\n    name: 'EuropeMap',\r\n\r\n    data() {\r\n\r\n        return {\r\n            camera: null,\r\n            scene: new THREE.Scene(),\r\n            renderer: null,\r\n            mesh: null,\r\n            controls: null,\r\n            iR: null,\r\n            text: null,\r\n\r\n            material_building: new THREE.MeshNormalMaterial(),\r\n            HEIGHT: 1,\r\n\r\n            center: [10, 51],\r\n            SCALE: 1000000,\r\n\r\n            k: 0,\r\n\r\n            COUNTRIES: [\r\n                \"Germany\",\r\n                \"France\", \r\n                \"Denmark\",                \r\n                \"Netherlands\", \r\n                \"Luxembourg\",                 \r\n                \"Switzerland\",                 \r\n                \"Poland\", \r\n                \"Italy\",\r\n                \"Liechtenstein\",\r\n                \"Czech Republic\", \r\n                \"Austria\", \r\n                \"Belgium\", \r\n                \"Sweden\",\r\n                \"Finland\",\r\n                \"Norway\",\r\n                \"Hungary\",\r\n                \"Slovakia\",\r\n            ],\r\n\r\n            COUNTRIES_MESH: [],\r\n            COUNTRIES_TEXT: [],\r\n            COUNTRIES_TEXT_ROT: [],\r\n            COUNTRIES_TEXT_POS: [],\r\n            COUNTRIES_TEXT_HEIGHT: 0.09,\r\n            COUNTRIES_POINT:[],\r\n\r\n            GEO_POINT: new THREE.BoxGeometry(0.005, 0.005, 0.005),\r\n\r\n            MAT_BASIC_BLACK: new THREE.MeshBasicMaterial({color: 0x000000}),\r\n\r\n            COL_OCEAN: new THREE.Color(0xabd8ea),\r\n            COL_TARGET : new THREE.Color(0xF8F8FF), // white\r\n            COL_REST: new THREE.Color(0xCCFF0CC), // green\r\n            COL_EDGES: new THREE.Color(0x97B49C), // dark green\r\n            COL_FONT: new THREE.Color(0x484848), // gray\r\n            COL_FONT2: new THREE.Color(0xff0000), // red\r\n\r\n            COLORMAPS: [\r\n                new THREE.Color(0xFFADAD), \r\n                new THREE.Color(0xFFD6A5), //orange\r\n                new THREE.Color(0xFDFFB6), // yellow\r\n                new THREE.Color(0xCAFFBF), // green\r\n                new THREE.Color(0x9BF6FF), // aqua\r\n                new THREE.Color(0xA0C4FF), // pastell-blue\r\n                new THREE.Color(0xBDB2FF), // violet\r\n                new THREE.Color(0xFFC6FF), // pastell-pink\r\n                new THREE.Color(0xFF00FC), // neon pink\r\n                new THREE.Color(0xff5d8f), // pastell pink 2\r\n                new THREE.Color(0xffeedd), // pastell-orange\r\n                new THREE.Color(0xff686b), // green 2 \r\n         ],\r\n\r\n        }\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        init: function () {\r\n\r\n            let that = this;\r\n\r\n            window.addEventListener('resize', onWindowResize, false);\r\n\r\n            function onWindowResize() {\r\n                that.camera.aspect = window.innerWidth / window.innerHeight;\r\n                that.camera.updateProjectionMatrix();\r\n                that.renderer.setSize(window.innerWidth, window.innerHeight);\r\n            }\r\n\r\n            let container = document.getElementById('container');\r\n\r\n            // this.camera = new THREE.PerspectiveCamera(25, window.innerWidth / window.innerHeight, 1, 100);\r\n            // this.camera.position.set(8, 4, 0);\r\n\r\n            // initial bird view\r\n            this.camera = new THREE.OrthographicCamera( window.innerWidth  / - 2, window.innerWidth  / 2, window.innerHeight/ 2, window.innerHeight / - 2, 1, 1000 );\r\n            this.camera.zoom = 1800;\r\n            // this.camera = new THREE.PerspectiveCamera(25, window.innerWidth / window.innerHeight, 1, 100);\r\n            this.camera.position.set(0, 4, 0); // XYZ\r\n            this.camera.lookAt(0,0,0);\r\n            this.camera.rotation.y = Math.PI/2 ;\r\n            \r\n\r\n            this.scene.background = this.COL_OCEAN;\r\n\r\n            let gridHelper = new THREE.GridHelper(60, 150, new THREE.Color(0xff0000), new THREE.Color(0xffffff));\r\n            this.scene.add(gridHelper);\r\n\r\n\r\n            let light0 = new THREE.AmbientLight(0xfafafa, 0.005);\r\n            let light1 = new THREE.PointLight(0xfafafa, 0.005);\r\n            let light2 = new THREE.PointLight(0xfafafa, 0.005);\r\n\r\n            light1.position.set(200, 90, 40);\r\n            light2.position.set(200, 90, 40);\r\n\r\n            this.scene.add(light0);\r\n            this.scene.add(light1);\r\n            this.scene.add(light2);\r\n\r\n            this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n            this.renderer.setPixelRatio(window.devicePixelRatio);\r\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n            this.camera.updateProjectionMatrix();\r\n\r\n            container.appendChild(this.renderer.domElement);\r\n\r\n            this.controls = new MapControls(this.camera, this.renderer.domElement);\r\n            this.controls.enableDamping = true;\r\n            this.controls.dampingFactor = 0.25;\r\n            this.controls.screenSpacePanning = false;\r\n            this.controls.maxDistance = 80;\r\n\r\n            // POINT \r\n            let geometry = new THREE.BoxGeometry(0.005, 0.005, 0.005);\r\n            let material = new THREE.MeshBasicMaterial({color: 0xff0000});\r\n            let mesh = new THREE.Mesh(geometry, material);\r\n            mesh.position.y = 0.1;\r\n            this.scene.add(mesh);\r\n\r\n\r\n            // // FONT \r\n            // let fontloader = new FontLoader();\r\n            // let ttfLoader = new TTFLoader();\r\n\r\n            // ttfLoader.load(DBSANS, (json) => {\r\n            //     // First parse the font.\r\n            //     let dbsans = fontloader.parse(json);\r\n            //     // Use parsed font as normal.\r\n            //     let textGeometry = new TextGeometry('hello world', { height: 0.005, size: 0.005, font: dbsans });\r\n            //     let textMaterial = new THREE.MeshBasicMaterial({ color: this.COL_FONT } );\r\n            //     let textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n            //     textMesh.position.x = 0.0075; // RIGHT-LEFT\r\n            //     textMesh.position.z =  0.002; // Up-DOWN\r\n            //     textMesh.position.y = 0.1; // HEIGHT\r\n            //     textMesh.rotateX(Math.PI/2);\r\n            //     textMesh.rotateZ(Math.PI);  \r\n            //     textMesh.rotateY(Math.PI);   \r\n            //     this.scene.add(textMesh);\r\n\r\n            // });\r\n     \r\n            \r\n            \r\n        },\r\n\r\n        animate: function () {\r\n            \r\n            requestAnimationFrame(this.animate);\r\n            // this.mesh.rotation.x += 0.01;\r\n            // this.mesh.rotation.y += 0.02;\r\n            this.renderer.render(this.scene, this.camera);\r\n            this.controls.update();\r\n            this.faceTowardsCamera();\r\n        },\r\n\r\n        faceTowardsCamera: function(){\r\n            if (this.camera.position.y <= 3.85){\r\n\r\n                if (this.camera.position.y <= 1.75){\r\n\r\n                    for(let m=0; m < this.COUNTRIES_TEXT.length; m++){\r\n                        this.COUNTRIES_TEXT[m].lookAt(this.camera.position);\r\n\r\n                    }\r\n                }\r\n                else{\r\n\r\n                    for(let m=0; m < this.COUNTRIES_TEXT.length; m++){\r\n                        this.COUNTRIES_TEXT[m].lookAt(this.camera.position);\r\n                        this.COUNTRIES_TEXT[m].rotation.z = this.camera.rotation.z;\r\n                    }\r\n                }\r\n             \r\n            }\r\n            else{\r\n                for(let m=0; m < this.COUNTRIES_TEXT.length; m++){\r\n                    \r\n                    this.COUNTRIES_TEXT[m].rotation.x = this.COUNTRIES_TEXT_ROT[m][0];\r\n                    this.COUNTRIES_TEXT[m].rotation.y = this.COUNTRIES_TEXT_ROT[m][1];\r\n                    // this.COUNTRIES_TEXT[m].rotation.z = this.COUNTRIES_TEXT_ROT[m][2];\r\n                    this.COUNTRIES_TEXT[m].rotation.z = this.camera.rotation.z;\r\n\r\n                   \r\n                }\r\n            }   \r\n        },\r\n\r\n\r\n        getCityData: function(){\r\n\r\n        },\r\n\r\n        getMapData: function () {\r\n            fetch(\"./europe_borders_7MB_6p.geojson\").then((response) => {\r\n                response.json().then((data) => {\r\n\r\n                    let f = data.features;\r\n                    let ckey = 0;\r\n                    // console.log(f);\r\n                    for (let i = 0; i < f.length; i++) {\r\n                        if (this.COUNTRIES.includes(f[i].properties[\"NAME\"])) {\r\n                            // console.log(f[i].properties[\"NAME\"]);\r\n                            if(f[i].properties[\"NAME\"] == \"Austria\" || f[i].properties[\"NAME\"] == \"Belgium\" || f[i].properties[\"NAME\"] == \"Switzerland\" || f[i].properties[\"NAME\"] == \"Czech Republic\" || f[i].properties[\"NAME\"] == \"Luxembourg\" || f[i].properties[\"NAME\"] == \"Liechtenstein\" || f[i].properties[\"NAME\"] == \"Hungary\" || f[i].properties[\"NAME\"] == \"Slovakia\"){\r\n                                this.getPolygons([f[i].geometry.coordinates], ckey, f[i].properties[\"NAME\"]);\r\n                            }\r\n                            else{\r\n                                this.getPolygons(f[i].geometry.coordinates, ckey, f[i].properties[\"NAME\"]);\r\n                            }\r\n                            \r\n                            ckey ++;\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n\r\n        setCountryNames: function(){\r\n\r\n            fetch(\"./countries_centroids_mod.geojson\").then((response) => {\r\n                response.json().then((data) => {\r\n                    for (let c = 0; c < this.COUNTRIES.length; c++) {\r\n                        for (let i = 0; i < data.features.length; i++) {\r\n                            if(data.features[i].properties[\"COUNTRY\"] == this.COUNTRIES[c]){\r\n                                // console.log(this.COUNTRIES[c]);\r\n                                let coordinates = this.getGPSRelativePosition(data.features[i].geometry[\"coordinates\"], this.center);\r\n                                let mesh = new THREE.Mesh(this.GEO_POINT, this.MAT_BASIC_BLACK);\r\n                                mesh.position.y = 0.1;\r\n                                mesh.position.z = -coordinates[0];\r\n                                mesh.position.x = -coordinates[1];\r\n                                // this.scene.add(mesh); \r\n                                let fontloader = new FontLoader();\r\n                                let ttfLoader = new TTFLoader();\r\n                                ttfLoader.load(DBSANS, (json) => {\r\n                                    // First parse the font.\r\n                                    let dbsans = fontloader.parse(json);\r\n                                    // Use parsed font as normal.\r\n                                    let textGeometry = new TextGeometry(this.COUNTRIES[c], { height: 0.0001, size: 0.0048, font: dbsans });\r\n                                    let textMaterial = new THREE.MeshBasicMaterial({ color: this.COL_FONT } );\r\n                                    let textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n                                    textMesh.position.x = -coordinates[1];\r\n                                    textMesh.position.z = -coordinates[0];\r\n                                    textMesh.position.y = this.COUNTRIES_TEXT_HEIGHT; // HEIGHT\r\n                                    textMesh.rotateX(Math.PI/2);\r\n                                    textMesh.rotateZ(Math.PI);  \r\n                                    textMesh.rotateY(Math.PI);\r\n                                    this.COUNTRIES_TEXT_POS.push([textMesh.position.x, textMesh.position.y, textMesh.position.z]);\r\n                                    this.COUNTRIES_TEXT_ROT.push([textMesh.rotation.x, textMesh.rotation.y, textMesh.rotation.z]);    \r\n                                    this.scene.add(textMesh);\r\n                                    \r\n                                    this.COUNTRIES_POINT.push(mesh);                \r\n                                    this.COUNTRIES_TEXT.push(textMesh);\r\n\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                })\r\n            })\r\n\r\n\r\n\r\n        },\r\n\r\n        getPolygons: function (patches, key, country) {\r\n\r\n            // console.log(\"Patches\", key, patches);\r\n\r\n            let material = new THREE.MeshBasicMaterial();\r\n          \r\n            // material.color.set(this.COLORMAPS[key]);\r\n            if (country == \"Germany\"){\r\n                material.color.set(this.COL_TARGET);\r\n            }\r\n            else{\r\n                material.color.set(this.COL_REST);\r\n            }\r\n\r\n            for (let i = 0; i < patches.length; i++) {\r\n\r\n                let shape = this.genShape(patches[i], this.center);\r\n                let geometry = this.genGeometry(shape, { curveSegments: 1, depth: 0.02* this.HEIGHT, bevelEnabled: false });\r\n                geometry.rotateX(Math.PI / 2);\r\n                geometry.rotateZ(Math.PI);     \r\n                geometry.rotateY(-Math.PI / 2);  \r\n                let mesh = new THREE.Mesh(geometry, material);\r\n                this.scene.add(mesh);\r\n                let edges = new THREE.EdgesGeometry( geometry );\r\n                let line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: this.COL_EDGES } ) );\r\n                this.scene.add( line );\r\n\r\n            }\r\n        },\r\n\r\n        genShape: function (points, center) {\r\n\r\n            let shape = new THREE.Shape();\r\n\r\n            for (let i = 0; i < points.length; i++) {\r\n\r\n                let p = points[i];\r\n\r\n                for (let j = 0; j < p.length; j++) {\r\n\r\n                    let elp = this.getGPSRelativePosition(p[j], center);\r\n                       if (j == 0) {\r\n                        shape.moveTo(elp[0], elp[1]);\r\n                    }\r\n                    else {\r\n                        shape.lineTo(elp[0], elp[1]);\r\n                    }\r\n                }\r\n            }\r\n            return shape;\r\n        },\r\n\r\n        genGeometry: function (shape, config) {\r\n            let geometry = new THREE.ExtrudeGeometry(shape, config);\r\n            geometry.computeBoundingBox();\r\n            return geometry;\r\n        },\r\n\r\n        // alogorithm for normalizing geojson point coordinates while considering map projection distortion\r\n        getGPSRelativePosition: function (objPos, centerPos) {\r\n\r\n            // get gps distance \r\n            let dis = GEOLIB.getDistance(objPos, centerPos);\r\n\r\n            // get bearing angle\r\n            let bearing = GEOLIB.getRhumbLineBearing(objPos, centerPos);\r\n\r\n            // calculate X by centerpos.x + distance * cos(rad)\r\n            // calculate Y by centerpos.y + distance * sind(rad)\r\n            let x = centerPos[0] + (dis * Math.cos(bearing * Math.PI / 180));\r\n            let y = centerPos[1] + (dis * Math.sin(bearing * Math.PI / 180));\r\n\r\n            x /= this.SCALE;\r\n            y /= this.SCALE;\r\n\r\n            return [-x, y]\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n\r\n        this.init();\r\n        this.animate();\r\n        this.setCountryNames();\r\n        this.getMapData();\r\n        \r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#container {\r\n    font-family: Avenir, Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    background-color: red;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./europe.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./europe.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./europe.vue?vue&type=template&id=9465c4c0&scoped=true&\"\nimport script from \"./europe.vue?vue&type=script&lang=js&\"\nexport * from \"./europe.vue?vue&type=script&lang=js&\"\nimport style0 from \"./europe.vue?vue&type=style&index=0&id=9465c4c0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9465c4c0\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div id=\"banner\"></div>\n    <!-- <TrainMap/> -->\n    <!-- <GermanyMap /> -->\n    <EuropeMap />\n  </div>\n\n</template>\n\n<script>\n// import TrainMap from './components/TrainMap.vue'\n// import GermanyMap from './components/germany.vue'\nimport EuropeMap from './components/europe.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    //TrainMap,\n    //GermanyMap,\n    EuropeMap,\n  }\n}\n</script>\n\n<style>\n*{\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#banner {\n    background-color: red;\n    background-image: url(\"./../public/banner_01.png\");\n    position: absolute;\n    display: block;\n    z-index: 99;\n    left: 0%;\n    bottom: 0%;\n    width:1421px;\n    height:179px;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    }\n\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=771c0612&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=771c0612&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktrain_mapgenerator2\"] = self[\"webpackChunktrain_mapgenerator2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6829); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","name","data","camera","scene","renderer","mesh","controls","iR","text","material_building","HEIGHT","center","SCALE","k","COUNTRIES","COUNTRIES_MESH","COUNTRIES_TEXT","COUNTRIES_TEXT_ROT","COUNTRIES_TEXT_POS","COUNTRIES_TEXT_HEIGHT","COUNTRIES_POINT","GEO_POINT","MAT_BASIC_BLACK","color","COL_OCEAN","COL_TARGET","COL_REST","COL_EDGES","COL_FONT","COL_FONT2","COLORMAPS","methods","init","that","window","light1","light2","antialias","container","animate","requestAnimationFrame","faceTowardsCamera","getCityData","getMapData","fetch","response","ckey","setCountryNames","ttfLoader","height","size","font","textMesh","getPolygons","material","curveSegments","depth","bevelEnabled","geometry","genShape","shape","genGeometry","getGPSRelativePosition","x","y","mounted","component","components","EuropeMap","Vue","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}